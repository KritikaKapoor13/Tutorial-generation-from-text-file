{"ast":null,"code":"var _jsxFileName = \"D:\\\\College\\\\Capstone project\\\\Final\\\\frontend\\\\new-ui\\\\src\\\\components\\\\pages\\\\StudentAssessment\\\\completed_quiz.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from './Question';\nimport QuestionCount from './QuestionCount';\nimport AnswerOption from './AnswerOption';\nimport { CSSTransitionGroup } from 'react-transition-group';\n\nfunction Completed(props) {\n  console.log(props);\n\n  function renderAnswerOptions(key, question) {\n    return /*#__PURE__*/React.createElement(AnswerOption, {\n      key: key,\n      answerContent: key // answerType={key.type}\n      ,\n      answer: props.answer,\n      questionId: props.questionId,\n      correct_answer: props.correct_answer,\n      onAnswerSelected: props.onAnswerSelected,\n      status: \"taken\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }\n    });\n  }\n\n  props.questions.map((question, index) => {\n    return /*#__PURE__*/React.createElement(CSSTransitionGroup, {\n      className: \"container\",\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: index + 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(QuestionCount, {\n      counter: index + 1,\n      total: props.questions.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Question, {\n      content: question[\"question\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"answerOptions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, question[\"answers\"].map(renderAnswerOptions(question))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }), props.answer && props.answer !== props.correct_answer ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 65\n      }\n    }, \"Correct answer is \", props.correct_answer) : false));\n  });\n}\n\nexport default Completed;","map":{"version":3,"sources":["D:/College/Capstone project/Final/frontend/new-ui/src/components/pages/StudentAssessment/completed_quiz.js"],"names":["React","PropTypes","Question","QuestionCount","AnswerOption","CSSTransitionGroup","Completed","props","console","log","renderAnswerOptions","key","question","answer","questionId","correct_answer","onAnswerSelected","questions","map","index","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,kBAAT,QAAmC,wBAAnC;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,WAASG,mBAAT,CAA6BC,GAA7B,EAAiCC,QAAjC,EAA2C;AACvC,wBACE,oBAAC,YAAD;AACE,MAAA,GAAG,EAAED,GADP;AAEE,MAAA,aAAa,EAAEA,GAFjB,CAGE;AAHF;AAIE,MAAA,MAAM,EAAEJ,KAAK,CAACM,MAJhB;AAKE,MAAA,UAAU,EAAEN,KAAK,CAACO,UALpB;AAME,MAAA,cAAc,EAAEP,KAAK,CAACQ,cANxB;AAOE,MAAA,gBAAgB,EAAER,KAAK,CAACS,gBAP1B;AAQE,MAAA,MAAM,EAAC,OART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAYD;;AACHT,EAAAA,KAAK,CAACU,SAAN,CAAgBC,GAAhB,CAAoB,CAACN,QAAD,EAAUO,KAAV,KAAkB;AAClC,wBACF,oBAAC,kBAAD;AACA,MAAA,SAAS,EAAC,WADV;AAEA,MAAA,SAAS,EAAC,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE;AAAK,MAAA,GAAG,EAAEA,KAAK,GAAC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AACE,MAAA,OAAO,EAAEA,KAAK,GAAC,CADjB;AAEE,MAAA,KAAK,EAAEZ,KAAK,CAACU,SAAN,CAAgBG,MAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAER,QAAQ,CAAC,UAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,QAAQ,CAAC,SAAD,CAAR,CAAoBM,GAApB,CAAwBR,mBAAmB,CAACE,QAAD,CAA3C,CADH,CANF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUGL,KAAK,CAACM,MAAN,IAAgBN,KAAK,CAACM,MAAN,KAAeN,KAAK,CAACQ,cAArC,gBAAqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAuBR,KAAK,CAACQ,cAA7B,CAArD,GAAuG,KAV1G,CAHF,CADE;AAkBH,GAnBD;AAqBH;;AAEC,eAAeT,SAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Question from './Question';\r\nimport QuestionCount from './QuestionCount';\r\nimport AnswerOption from './AnswerOption';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\n\r\nfunction Completed(props) {\r\n    console.log(props);\r\n    function renderAnswerOptions(key,question) {\r\n        return (\r\n          <AnswerOption\r\n            key={key}\r\n            answerContent={key}\r\n            // answerType={key.type}\r\n            answer={props.answer}\r\n            questionId={props.questionId}\r\n            correct_answer={props.correct_answer}\r\n            onAnswerSelected={props.onAnswerSelected}\r\n            status=\"taken\"\r\n          />\r\n        );\r\n      }\r\n    props.questions.map((question,index)=>{\r\n        return (\r\n      <CSSTransitionGroup\r\n      className=\"container\"\r\n      component=\"div\">\r\n        <div key={index+1}>\r\n          <QuestionCount\r\n            counter={index+1}\r\n            total={props.questions.length}\r\n          />\r\n          <Question content={question[\"question\"]} />\r\n          <ul className=\"answerOptions\">\r\n            {question[\"answers\"].map(renderAnswerOptions(question))}\r\n          </ul>\r\n          <br></br>\r\n          {props.answer && props.answer!==props.correct_answer? <h2>Correct answer is {props.correct_answer}</h2>:false}\r\n        </div>\r\n        </CSSTransitionGroup>\r\n        )\r\n    }\r\n    );\r\n}\r\n  \r\n  export default Completed;"]},"metadata":{},"sourceType":"module"}