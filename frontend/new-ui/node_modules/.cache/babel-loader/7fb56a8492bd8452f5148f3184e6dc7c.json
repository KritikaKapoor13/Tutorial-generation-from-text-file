{"ast":null,"code":"var _jsxFileName = \"D:\\\\College\\\\Capstone project\\\\Final\\\\frontend\\\\new-ui\\\\src\\\\components\\\\pages\\\\StudentAssessment\\\\completed_quiz.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from './Question';\nimport QuestionCount from './QuestionCount';\nimport AnswerOption from './AnswerOption';\nimport { CSSTransitionGroup } from 'react-transition-group';\n\nfunction Completed(props) {\n  console.log(props);\n\n  function renderAnswerOptions(key) {\n    return /*#__PURE__*/React.createElement(AnswerOption, {\n      key: key,\n      answerContent: key // answerType={key.type}\n      ,\n      answer: props.answer,\n      questionId: props.questionId,\n      correct_answer: props.correct_answer,\n      onAnswerSelected: props.onAnswerSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(CSSTransitionGroup, {\n    className: \"container\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    key: props.questionId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(QuestionCount, {\n    counter: props.questionId,\n    total: props.questionTotal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Question, {\n    content: props.question,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"answerOptions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, props.answerOptions.map(renderAnswerOptions)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), props.answer && props.answer !== props.correct_answer ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 65\n    }\n  }, \"Correct answer is \", props.correct_answer) : false));\n}\n\nexport default Completed;","map":{"version":3,"sources":["D:/College/Capstone project/Final/frontend/new-ui/src/components/pages/StudentAssessment/completed_quiz.js"],"names":["React","PropTypes","Question","QuestionCount","AnswerOption","CSSTransitionGroup","Completed","props","console","log","renderAnswerOptions","key","answer","questionId","correct_answer","onAnswerSelected","questionTotal","question","answerOptions","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,kBAAT,QAAmC,wBAAnC;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,WAASG,mBAAT,CAA6BC,GAA7B,EAAkC;AAC9B,wBACE,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,aAAa,EAAEA,GAFjB,CAGE;AAHF;AAIE,MAAA,MAAM,EAAEJ,KAAK,CAACK,MAJhB;AAKE,MAAA,UAAU,EAAEL,KAAK,CAACM,UALpB;AAME,MAAA,cAAc,EAAEN,KAAK,CAACO,cANxB;AAOE,MAAA,gBAAgB,EAAEP,KAAK,CAACQ,gBAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD;;AACH,sBAEE,oBAAC,kBAAD;AACA,IAAA,SAAS,EAAC,WADV;AAEA,IAAA,SAAS,EAAC,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAK,IAAA,GAAG,EAAER,KAAK,CAACM,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,OAAO,EAAEN,KAAK,CAACM,UADjB;AAEE,IAAA,KAAK,EAAEN,KAAK,CAACS,aAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAET,KAAK,CAACU,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,KAAK,CAACW,aAAN,CAAoBC,GAApB,CAAwBT,mBAAxB,CADH,CANF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUGH,KAAK,CAACK,MAAN,IAAgBL,KAAK,CAACK,MAAN,KAAeL,KAAK,CAACO,cAArC,gBAAqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuBP,KAAK,CAACO,cAA7B,CAArD,GAAuG,KAV1G,CAHF,CAFF;AAmBD;;AAED,eAAeR,SAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Question from './Question';\r\nimport QuestionCount from './QuestionCount';\r\nimport AnswerOption from './AnswerOption';\r\nimport { CSSTransitionGroup } from 'react-transition-group';\r\n\r\nfunction Completed(props) {\r\n    console.log(props);\r\n    function renderAnswerOptions(key) {\r\n        return (\r\n          <AnswerOption\r\n            key={key}\r\n            answerContent={key}\r\n            // answerType={key.type}\r\n            answer={props.answer}\r\n            questionId={props.questionId}\r\n            correct_answer={props.correct_answer}\r\n            onAnswerSelected={props.onAnswerSelected}\r\n          />\r\n        );\r\n      }\r\n    return (\r\n        \r\n      <CSSTransitionGroup\r\n      className=\"container\"\r\n      component=\"div\">\r\n        <div key={props.questionId}>\r\n          <QuestionCount\r\n            counter={props.questionId}\r\n            total={props.questionTotal}\r\n          />\r\n          <Question content={props.question} />\r\n          <ul className=\"answerOptions\">\r\n            {props.answerOptions.map(renderAnswerOptions)}\r\n          </ul>\r\n          <br></br>\r\n          {props.answer && props.answer!==props.correct_answer? <h2>Correct answer is {props.correct_answer}</h2>:false}\r\n        </div>\r\n        </CSSTransitionGroup>\r\n    );\r\n  }\r\n  \r\n  export default Completed;"]},"metadata":{},"sourceType":"module"}