{"ast":null,"code":"var _jsxFileName = \"D:\\\\College\\\\Capstone project\\\\Final\\\\frontend\\\\new-ui\\\\src\\\\components\\\\pages\\\\StudentAssessment\\\\Quiz.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from './Question';\nimport QuestionCount from './QuestionCount';\nimport AnswerOption from './AnswerOption';\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key) {\n    return /*#__PURE__*/React.createElement(AnswerOption // key={key.content}\n    , {\n      answerContent: key // answerType={key.type}\n      ,\n      answer: props.answer,\n      questionId: props.questionId,\n      onAnswerSelected: props.onAnswerSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quiz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(QuestionCount, {\n    counter: props.questionId,\n    total: props.questionTotal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Question, {\n    content: props.question,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }));\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  counter: PropTypes.number.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\nexport default Quiz;","map":{"version":3,"sources":["D:/College/Capstone project/Final/frontend/new-ui/src/components/pages/StudentAssessment/Quiz.js"],"names":["React","PropTypes","Question","QuestionCount","AnswerOption","Quiz","props","renderAnswerOptions","key","answer","questionId","onAnswerSelected","questionTotal","question","propTypes","string","isRequired","answerOptions","array","counter","number","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,WAASC,mBAAT,CAA6BC,GAA7B,EAAkC;AAC9B,wBACE,oBAAC,YAAD,CACE;AADF;AAEE,MAAA,aAAa,EAAEA,GAFjB,CAGE;AAHF;AAIE,MAAA,MAAM,EAAEF,KAAK,CAACG,MAJhB;AAKE,MAAA,UAAU,EAAEH,KAAK,CAACI,UALpB;AAME,MAAA,gBAAgB,EAAEJ,KAAK,CAACK,gBAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AACH,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,OAAO,EAAEL,KAAK,CAACI,UADjB;AAEE,IAAA,KAAK,EAAEJ,KAAK,CAACM,aAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEN,KAAK,CAACO,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADJ;AAYD;;AAEDR,IAAI,CAACS,SAAL,GAAiB;AACfL,EAAAA,MAAM,EAAER,SAAS,CAACc,MAAV,CAAiBC,UADV;AAEfC,EAAAA,aAAa,EAAEhB,SAAS,CAACiB,KAAV,CAAgBF,UAFhB;AAGfG,EAAAA,OAAO,EAAElB,SAAS,CAACmB,MAAV,CAAiBJ,UAHX;AAIfH,EAAAA,QAAQ,EAAEZ,SAAS,CAACc,MAAV,CAAiBC,UAJZ;AAKfN,EAAAA,UAAU,EAAET,SAAS,CAACmB,MAAV,CAAiBJ,UALd;AAMfJ,EAAAA,aAAa,EAAEX,SAAS,CAACmB,MAAV,CAAiBJ,UANjB;AAOfL,EAAAA,gBAAgB,EAAEV,SAAS,CAACoB,IAAV,CAAeL;AAPlB,CAAjB;AAUA,eAAeX,IAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Question from './Question';\r\nimport QuestionCount from './QuestionCount';\r\nimport AnswerOption from './AnswerOption';\r\n\r\nfunction Quiz(props) {\r\n    function renderAnswerOptions(key) {\r\n        return (\r\n          <AnswerOption\r\n            // key={key.content}\r\n            answerContent={key}\r\n            // answerType={key.type}\r\n            answer={props.answer}\r\n            questionId={props.questionId}\r\n            onAnswerSelected={props.onAnswerSelected}\r\n          />\r\n        );\r\n      }\r\n    return (\r\n        <div className=\"quiz\">\r\n          <QuestionCount\r\n            counter={props.questionId}\r\n            total={props.questionTotal}\r\n          />\r\n          <Question content={props.question} />\r\n          {/* <ul className=\"answerOptions\">\r\n            {props.answerOptions.map(renderAnswerOptions)}\r\n          </ul> */}\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  Quiz.propTypes = {\r\n    answer: PropTypes.string.isRequired,\r\n    answerOptions: PropTypes.array.isRequired,\r\n    counter: PropTypes.number.isRequired,\r\n    question: PropTypes.string.isRequired,\r\n    questionId: PropTypes.number.isRequired,\r\n    questionTotal: PropTypes.number.isRequired,\r\n    onAnswerSelected: PropTypes.func.isRequired\r\n  };\r\n  \r\n  export default Quiz;"]},"metadata":{},"sourceType":"module"}