{"ast":null,"code":"var _jsxFileName = \"D:\\\\College\\\\Capstone project\\\\Final\\\\frontend\\\\new-ui\\\\src\\\\components\\\\pages\\\\StudentAssessment.jsx\";\nimport React from 'react';\nimport './studentass.css';\nimport Question from './StudentAssessment/Question';\nimport Quiz from './StudentAssessment/Quiz';\n\nclass Sassessment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      questionId: 0,\n      question: '',\n      answerOptions: '',\n      answer: '',\n      answersCount: {},\n      result: '',\n      mcq: this.props.location.data\n    };\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      question: this.state.mcq[0][\"question_statement\"],\n      answerOptions: this.state.mcq[0][\"options\"],\n      answer: this.state.mcq[0][\"answer\"]\n    });\n    console.log(this.state);\n  }\n\n  setUserAnswer(answer) {\n    this.setState(state => ({\n      answersCount: { ...state.answersCount,\n        [answer]: (state.answersCount[answer] || 0) + 1\n      },\n      answer: answer\n    }));\n  }\n\n  setNextQuestion() {\n    const counter = this.state.counter + 1;\n    const questionId = this.state.questionId + 1;\n    this.setState({\n      counter: counter,\n      questionId: questionId,\n      question: this.state.mcq[counter][\"question_statement\"],\n      answerOptions: this.state.mcq[counter][\"options\"],\n      answer: this.state.mcq[counter][\"answer\"]\n    });\n  }\n\n  handleAnswerSelected(event) {\n    this.setUserAnswer(event.currentTarget.value);\n\n    if (this.state.questionId < this.state.mcq.length) {\n      setTimeout(() => this.setNextQuestion(), 300);\n    } else {// do nothing for now\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Quiz, {\n      answer: this.state.answer,\n      answerOptions: this.state.answerOptions,\n      questionId: this.state.questionId,\n      question: this.state.question,\n      questionTotal: Object.keys(this.state.mcq).length,\n      onAnswerSelected: this.handleAnswerSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default Sassessment;","map":{"version":3,"sources":["D:/College/Capstone project/Final/frontend/new-ui/src/components/pages/StudentAssessment.jsx"],"names":["React","Question","Quiz","Sassessment","Component","constructor","props","state","counter","questionId","question","answerOptions","answer","answersCount","result","mcq","location","data","handleAnswerSelected","bind","componentDidMount","setState","console","log","setUserAnswer","setNextQuestion","event","currentTarget","value","length","setTimeout","render","Object","keys"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './studentass.css';\r\nimport Question from './StudentAssessment/Question';\r\nimport Quiz from './StudentAssessment/Quiz';\r\nclass Sassessment extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          counter: 0,\r\n          questionId: 0,\r\n          question: '',\r\n          answerOptions: '',\r\n          answer: '',\r\n          answersCount: {},\r\n          result: '',\r\n          mcq: this.props.location.data\r\n        };\r\n        this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\r\n      }\r\n      componentDidMount(){\r\n          this.setState({question:this.state.mcq[0][\"question_statement\"],answerOptions:this.state.mcq[0][\"options\"],answer:this.state.mcq[0][\"answer\"]})\r\n          console.log(this.state)\r\n      }\r\n      setUserAnswer(answer) {\r\n        this.setState((state) => ({\r\n          answersCount: {\r\n            ...state.answersCount,\r\n            [answer]: (state.answersCount[answer] || 0) + 1\r\n          },\r\n          answer: answer\r\n        }));\r\n      }\r\n      setNextQuestion() {\r\n        const counter = this.state.counter + 1;\r\n        const questionId = this.state.questionId + 1;\r\n        this.setState({\r\n          counter: counter,\r\n          questionId: questionId,\r\n          question: this.state.mcq[counter][\"question_statement\"],\r\n          answerOptions: this.state.mcq[counter][\"options\"],\r\n          answer: this.state.mcq[counter][\"answer\"]\r\n        });\r\n      }\r\n      handleAnswerSelected(event) {\r\n        this.setUserAnswer(event.currentTarget.value);\r\n        if (this.state.questionId < this.state.mcq.length) {\r\n            setTimeout(() => this.setNextQuestion(), 300);\r\n          } else {\r\n            // do nothing for now\r\n          }\r\n      }\r\n    render(){\r\n        return (\r\n            <Quiz\r\n        answer={this.state.answer}\r\n        answerOptions={this.state.answerOptions}\r\n        questionId={this.state.questionId}\r\n        question={this.state.question}\r\n        questionTotal={Object.keys(this.state.mcq).length}\r\n        onAnswerSelected={this.handleAnswerSelected}\r\n      />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sassessment;"]},"metadata":{},"sourceType":"module"}