{"ast":null,"code":"var _jsxFileName = \"D:\\\\College\\\\Capstone project\\\\Final\\\\frontend\\\\new-ui\\\\src\\\\components\\\\pages\\\\content.jsx\";\nimport React from 'react';\nimport './content.css';\n\nclass Content extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = props.heading;\n  }\n\n  render() {\n    const utf8 = require('utf8');\n\n    const Image_tag = ({\n      img_path\n    }) => /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: img_path,\n      height: \"50%\",\n      width: \"50%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 48\n      }\n    }));\n\n    const Content_data = ({\n      data\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"class\" + (data[\"heading\"][1] == 'h' ? data[\"heading\"].slice(2, data[\"heading\"].length - 1) : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 45\n      }\n    }, data[\"content\"]));\n\n    const TreeRecursive = ({\n      data\n    }) => {\n      if (data[\"children\"].length == 0) {\n        //console.log(data);\n        if (data[\"heading\"] != \"<img>\") {\n          return /*#__PURE__*/React.createElement(Content_data, {\n            data: data,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 26\n            }\n          });\n        } else {\n          console.log(data);\n          return /*#__PURE__*/React.createElement(Image_tag, {\n            img_path: \"http://localhost:5000/return-files1?pptpath=\" + data[\"content\"],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 26\n            }\n          });\n        }\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Content_data, {\n          data: data,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 19\n          }\n        }), data[\"children\"].map(item => /*#__PURE__*/React.createElement(TreeRecursive, {\n          data: item,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }\n        })));\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container1\",\n      style: {\n        fontSize: \"24px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(TreeRecursive, {\n      data: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 142\n      }\n    }));\n  }\n\n}\n\nexport default Content;","map":{"version":3,"sources":["D:/College/Capstone project/Final/frontend/new-ui/src/components/pages/content.jsx"],"names":["React","Content","Component","constructor","props","state","heading","render","utf8","require","Image_tag","img_path","Content_data","data","slice","length","TreeRecursive","console","log","map","item","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;AAEA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAWD,KAAK,CAACE,OAAjB;AACH;;AACDC,EAAAA,MAAM,GAAE;AACJ,UAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,UAAMC,SAAS,GAAC,CAAC;AAACC,MAAAA;AAAD,KAAD,kBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAQ;AAAK,MAAA,GAAG,EAAEA,QAAV;AAAoB,MAAA,MAAM,EAAE,KAA5B;AAAmC,MAAA,KAAK,EAAE,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR,CAA/B;;AACA,UAAMC,YAAY,GAAC,CAAC;AAACC,MAAAA;AAAD,KAAD,kBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAG,MAAA,SAAS,EAAE,WAASA,IAAI,CAAC,SAAD,CAAJ,CAAgB,CAAhB,KAAoB,GAApB,GAAwBA,IAAI,CAAC,SAAD,CAAJ,CAAgBC,KAAhB,CAAsB,CAAtB,EAAwBD,IAAI,CAAC,SAAD,CAAJ,CAAgBE,MAAhB,GAAuB,CAA/C,CAAxB,GAA0E,EAAnF,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuGF,IAAI,CAAC,SAAD,CAA3G,CAAL,CAA/B;;AACA,UAAMG,aAAa,GAAG,CAAC;AAAEH,MAAAA;AAAF,KAAD,KAAc;AAC9B,UAAIA,IAAI,CAAC,UAAD,CAAJ,CAAiBE,MAAjB,IAA2B,CAA/B,EAAkC;AAChC;AACA,YAAGF,IAAI,CAAC,SAAD,CAAJ,IAAiB,OAApB,EAA4B;AAC1B,8BAAO,oBAAC,YAAD;AAAc,YAAA,IAAI,EAAEA,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,SAFD,MAGI;AACFI,UAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,8BAAO,oBAAC,SAAD;AAAW,YAAA,QAAQ,EAAE,iDAA+CA,IAAI,CAAC,SAAD,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF,OATD,MAUK;AACH,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACF,oBAAC,YAAD;AAAc,UAAA,IAAI,EAAEA,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADE,eAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFE,EAGDA,IAAI,CAAC,UAAD,CAAJ,CAAiBM,GAAjB,CAAsBC,IAAD,iBACpB,oBAAC,aAAD;AAAe,UAAA,IAAI,EAAEA,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,CAHC,CADJ;AAQD;AACF,KArBL;;AAsBA,wBACG;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEkI,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAE,KAAKhB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFlI,CADH;AAMH;;AArCgC;;AAuCrC,eAAeJ,OAAf","sourcesContent":["import React from 'react';\r\nimport './content.css';\r\n\r\nclass Content extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state=props.heading;\r\n    }\r\n    render(){\r\n        const utf8 = require('utf8');\r\n        const Image_tag=({img_path})=>(<center><img src={img_path} height={\"50%\"} width={\"50%\"}></img></center>);\r\n        const Content_data=({data}) =>(<div><p className={\"class\"+(data[\"heading\"][1]=='h'?data[\"heading\"].slice(2,data[\"heading\"].length-1):'')}>{data[\"content\"]}</p></div>);\r\n        const TreeRecursive = ({ data }) => {\r\n              if (data[\"children\"].length == 0) {\r\n                //console.log(data);\r\n                if(data[\"heading\"]!=\"<img>\"){\r\n                  return <Content_data data={data}/>\r\n                }\r\n                else{\r\n                  console.log(data)\r\n                  return <Image_tag img_path={\"http://localhost:5000/return-files1?pptpath=\"+data[\"content\"]}/>\r\n                }\r\n              }\r\n              else {\r\n                return (\r\n                    <div>\r\n                  <Content_data data={data}/>\r\n                  <br></br>\r\n                  {data[\"children\"].map((item) => (\r\n                    <TreeRecursive data={item} />))}\r\n                </div>\r\n                );\r\n              }\r\n            }\r\n        return(\r\n           <div className=\"container1\" style={{fontSize:\"24px\"}}>\r\n             {/* {console.log(this.state[\"audio_link\"])} */}\r\n             {/* <audio controls src={\"http://localhost:5000/return-files1?pptpath=\"+this.state[\"audio_link\"]} type=\"audio/mpeg\"></audio> */}<TreeRecursive data={this.state}/></div> \r\n\r\n        )\r\n    }\r\n}\r\nexport default Content"]},"metadata":{},"sourceType":"module"}