{"ast":null,"code":"var _jsxFileName = \"D:\\\\College\\\\Capstone project\\\\Final\\\\frontend\\\\new-ui\\\\src\\\\components\\\\pages\\\\StudentAssessment.jsx\";\nimport React from 'react';\nimport './studentass.css';\nimport Question from './StudentAssessment/Question';\nimport Quiz from './StudentAssessment/Quiz';\nimport Result from './StudentAssessment/Result';\nimport jwt_decode from 'jwt-decode';\nimport { Link, withRouter } from 'react-router-dom';\n\nclass Sassessment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: '',\n      answer: '',\n      answersCount: {},\n      result: '',\n      mcq: '',\n      correct_answer: '',\n      score: 0,\n      tid: this.props.location.tid,\n      setid: this.props.location.data,\n      topic: this.props.location.topic,\n      total: 0\n    }; // console.log(this.state)\n\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this); // this.setNextQuestion=this.setNextQuestion.bind(this);\n    // this.setUserAnswer=this.setUserAnswer.bind(this);\n  }\n\n  componentWillMount() {\n    fetch('http://localhost:5000/check_set_attempted', {\n      method: 'POST',\n      body: JSON.stringify({\n        'tid': this.state.tid,\n        'set_number': this.state.setid,\n        'username': jwt_decode(localStorage.usertoken).identity.username\n      }),\n      headers: new Headers({\n        \"content-type\": \"application/json\"\n      })\n    }).then(response => {\n      response.json().then(body => {\n        console.log(body);\n\n        if (body.attempted == false) {\n          fetch('http://localhost:5000/get_question_sets', {\n            method: 'POST',\n            body: JSON.stringify({\n              'tid': this.state.tid,\n              'setid': this.state.setid\n            }),\n            headers: new Headers({\n              \"content-type\": \"application/json\"\n            })\n          }).then(response => {\n            response.json().then(body => {\n              console.log(body);\n              this.setState({\n                mcq: body\n              });\n              this.setState({\n                question: this.state.mcq[0][\"question\"],\n                answerOptions: this.state.mcq[0][\"answers\"],\n                correct_answer: this.state.mcq[0][\"correct_answer\"],\n                total: this.state.mcq.length\n              });\n              console.log(this.state);\n            });\n          });\n        } else {\n          this.setState({\n            score: body.score,\n            total: body.total,\n            result: true\n          });\n        }\n      });\n    });\n  }\n\n  setUserAnswer(answer) {\n    this.setState((state, props) => ({\n      score: this.state.correct_answer === answer ? this.state.score + 1 : this.state.score,\n      answer: answer\n    }));\n    console.log(this.state);\n    fetch('http://localhost:5000/set_answers', {\n      method: 'POST',\n      body: JSON.stringify({\n        'question_number': this.state.tid.toString() + \"_\" + this.state.setid.toString() + \"_\" + this.state.questionId,\n        'answer': answer,\n        'username': jwt_decode(localStorage.usertoken).identity.username,\n        'id': this.state.tid\n      }),\n      headers: new Headers({\n        \"content-type\": \"application/json\"\n      })\n    });\n  }\n\n  setNextQuestion() {\n    console.log(\"setnext\");\n    const counter = this.state.counter + 1;\n    const questionId = this.state.questionId + 1;\n    this.setState({\n      counter: counter,\n      questionId: questionId,\n      question: this.state.mcq[counter][\"question\"],\n      answerOptions: this.state.mcq[counter][\"answers\"],\n      answer: '',\n      correct_answer: this.state.mcq[counter][\"correct_answer\"]\n    });\n  }\n\n  handleAnswerSelected(event) {\n    console.log(\"handle\");\n    this.setUserAnswer(event.currentTarget.value);\n\n    if (this.state.questionId < Object.keys(this.state.mcq).length) {\n      if (this.state.answer === this.state.correct_answer) {\n        setTimeout(() => this.setNextQuestion(), 300);\n      } else {\n        setTimeout(() => this.setNextQuestion(), 3000);\n      }\n    } else {\n      setTimeout(() => this.setResults(this.state.score), 300);\n    }\n  }\n\n  setResults(result) {\n    this.setState({\n      result: true\n    });\n  }\n\n  renderQuiz() {\n    return /*#__PURE__*/React.createElement(Quiz, {\n      answer: this.state.answer,\n      answerOptions: this.state.answerOptions,\n      questionId: this.state.questionId,\n      question: this.state.question,\n      questionTotal: Object.keys(this.state.mcq).length,\n      onAnswerSelected: this.handleAnswerSelected,\n      correct_answer: this.state.correct_answer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderResult() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Result, {\n      quizResult: this.state.score,\n      full: this.state.total,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: {\n        pathname: \"/ppt\",\n        topic: this.state.topic + 1,\n        tid: this.state.tid\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-secondary btn-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, \"Go back to tutorial\")));\n  }\n\n  render() {\n    console.log(this.state);\n\n    if (this.state.question) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 10\n        }\n      }, this.state.result ? this.renderResult() : this.renderQuiz());\n    } else {\n      return null;\n    }\n  }\n\n}\n\nexport default Sassessment;","map":{"version":3,"sources":["D:/College/Capstone project/Final/frontend/new-ui/src/components/pages/StudentAssessment.jsx"],"names":["React","Question","Quiz","Result","jwt_decode","Link","withRouter","Sassessment","Component","constructor","props","state","counter","questionId","question","answerOptions","answer","answersCount","result","mcq","correct_answer","score","tid","location","setid","data","topic","total","handleAnswerSelected","bind","componentWillMount","fetch","method","body","JSON","stringify","localStorage","usertoken","identity","username","headers","Headers","then","response","json","console","log","attempted","setState","length","setUserAnswer","toString","setNextQuestion","event","currentTarget","value","Object","keys","setTimeout","setResults","renderQuiz","renderResult","pathname","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './studentass.css';\r\nimport Question from './StudentAssessment/Question';\r\nimport Quiz from './StudentAssessment/Quiz';\r\nimport Result from './StudentAssessment/Result';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { Link, withRouter } from 'react-router-dom'\r\nclass Sassessment extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          counter: 0,\r\n          questionId: 1,\r\n          question: '',\r\n          answerOptions: '',\r\n          answer: '',\r\n          answersCount: {},\r\n          result: '',\r\n          mcq: '',\r\n          correct_answer: '',\r\n          score:0,\r\n          tid: this.props.location.tid,\r\n          setid:this.props.location.data,\r\n          topic:this.props.location.topic,\r\n          total:0\r\n        };\r\n        // console.log(this.state)\r\n        this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\r\n        // this.setNextQuestion=this.setNextQuestion.bind(this);\r\n        // this.setUserAnswer=this.setUserAnswer.bind(this);\r\n      }\r\n      componentWillMount(){\r\n        fetch('http://localhost:5000/check_set_attempted', {\r\n      method: 'POST',\r\n      body:JSON.stringify({'tid':this.state.tid,'set_number':this.state.setid,'username':jwt_decode(localStorage.usertoken).identity.username}),\r\n      headers: new Headers({\r\n        \"content-type\": \"application/json\"\r\n      })\r\n    }).then((response) => {\r\n      response.json().then((body) => {\r\n        console.log(body);\r\n        if(body.attempted==false){\r\n        fetch('http://localhost:5000/get_question_sets', {\r\n      method: 'POST',\r\n      body:JSON.stringify({'tid':this.state.tid,'setid':this.state.setid}),\r\n      headers: new Headers({\r\n        \"content-type\": \"application/json\"\r\n      })\r\n    }).then((response) => {\r\n      response.json().then((body) => {\r\n        console.log(body);\r\n        this.setState({mcq:body});\r\n        this.setState({question:this.state.mcq[0][\"question\"],answerOptions:this.state.mcq[0][\"answers\"],correct_answer:this.state.mcq[0][\"correct_answer\"],total:this.state.mcq.length});\r\n        console.log(this.state);\r\n    });\r\n    })\r\n  }\r\n  else{\r\n    this.setState({score:body.score,total:body.total,result:true})\r\n  }\r\n  });\r\n})}\r\n      setUserAnswer(answer) {\r\n        this.setState((state, props) => ({\r\n          score: (this.state.correct_answer===answer)?this.state.score+1:this.state.score,\r\n          answer: answer\r\n        }));\r\n        console.log(this.state)\r\n        fetch('http://localhost:5000/set_answers', {\r\n      method: 'POST',\r\n      body: JSON.stringify({'question_number':this.state.tid.toString()+\"_\"+this.state.setid.toString()+\"_\"+this.state.questionId,'answer':answer,'username':jwt_decode(localStorage.usertoken).identity.username,'id':this.state.tid}),\r\n      headers: new Headers({\r\n        \"content-type\": \"application/json\"\r\n      }),\r\n    })}\r\n      setNextQuestion() {\r\n          console.log(\"setnext\");\r\n        const counter = this.state.counter + 1;\r\n        const questionId = this.state.questionId + 1;\r\n        this.setState({\r\n          counter: counter,\r\n          questionId: questionId,\r\n          question: this.state.mcq[counter][\"question\"],\r\n          answerOptions: this.state.mcq[counter][\"answers\"],\r\n          answer: '',\r\n          correct_answer: this.state.mcq[counter][\"correct_answer\"]\r\n        });\r\n      }\r\n      handleAnswerSelected(event) {\r\n        console.log(\"handle\")\r\n        this.setUserAnswer(event.currentTarget.value);\r\n        if (this.state.questionId < Object.keys(this.state.mcq).length) {\r\n          if(this.state.answer===this.state.correct_answer){\r\n            setTimeout(() => this.setNextQuestion(), 300);\r\n          }\r\n          else{\r\n            setTimeout(() => this.setNextQuestion(), 3000);\r\n          }\r\n          } else {\r\n            setTimeout(() => this.setResults(this.state.score), 300);\r\n          }\r\n      }\r\n    \r\n      setResults(result) {\r\n          this.setState({ result: true });\r\n      }\r\n\r\n    renderQuiz(){\r\n        return (\r\n            <Quiz\r\n        answer={this.state.answer}\r\n        answerOptions={this.state.answerOptions}\r\n        questionId={this.state.questionId}\r\n        question={this.state.question}\r\n        questionTotal={Object.keys(this.state.mcq).length}\r\n        onAnswerSelected={this.handleAnswerSelected}\r\n        correct_answer={this.state.correct_answer}\r\n      />\r\n        );\r\n    }\r\n\r\n    renderResult() {\r\n      return (<div>\r\n        <Result quizResult={this.state.score} full={this.state.total} />\r\n        <Link to={{pathname:\"/ppt\",topic:this.state.topic+1,tid:this.state.tid}}>\r\n      <button  className=\"btn-secondary btn-lg\">Go back to tutorial</button></Link>\r\n        </div>);\r\n    }\r\n\r\n    render(){\r\n      console.log(this.state);\r\n      if(this.state.question){\r\n      return (\r\n        (<div>\r\n        {this.state.result ? this.renderResult() : this.renderQuiz()}\r\n        </div>)\r\n      )}\r\n      else{\r\n        return null;\r\n      }\r\n    }\r\n}\r\n\r\nexport default Sassessment;"]},"metadata":{},"sourceType":"module"}